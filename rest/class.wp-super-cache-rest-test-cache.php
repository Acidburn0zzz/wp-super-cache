<?php

class WP_Super_Cache_Rest_Test_Cache extends WP_REST_Controller {

	/**
	 * Get a collection of items
	 *
	 * @param WP_REST_Request $request Full data about the request.
	 * @return WP_Error|WP_REST_Response
	 */
	public function callback( $request ) {
		global $cache_path;

		$url = trailingslashit( get_bloginfo( 'url' ) );

		$response = array( 'status' => 'UNKNOWN' );
		$has_errors = false;

		$attempts = array( 'prime', 'first', 'second' );

		foreach ( $attempts as $c => $attemptName ) {
			$attempt = array();
			$page = wp_remote_get( $url, array('timeout' => 60, 'blocking' => true ) );

			if ( ! is_wp_error( $page ) ) {
				$fp = fopen( $cache_path . "1.html", "w" );
				fwrite( $fp, $page[ 'body' ] );
				fclose( $fp );
				sleep( 1 );
			}

			if ( is_wp_error( $page ) ) {
				$has_errors = true;
				$attempt['status'] = __( 'FAILED', 'wp-super-cache' );
				$attempt['errors'] = $this->format_error( $page );

			} elseif ( $page['response']['code'] != 200 ) {
				$has_errors = true;
				$attempt['status'] = __( 'FAILED', 'wp-super-cache' );
				$attempt['errors'] = array( $page['response']['message'] );

			// Don't run this step on prime cache.
			} elseif ( 0 !== $c && 0 === preg_match( '/(Cached page generated by WP-Super-Cache on) ([0-9]*-[0-9]*-[0-9]* [0-9]*:[0-9]*:[0-9]*)/', $page['body'], $matches2 ) ) {
				$has_errors = true;
				$attempt['status'] = __( 'FAILED', 'wp-super-cache' );
				$attempt['errors'] = array( __( 'The pages do not match! Timestamps differ or were not found!', 'wp-super-cache' ) );

			} else {
				$attempt['status'] = __( 'OK', 'wp-super-cache' );
			}

			$response['attempts'][$attemptName] = $attempt;
		}

		$response['status'] = $has_errors ? __( 'FAILED', 'wp-super-cache' ) : __( 'OK', 'wp-super-cache' );

		return rest_ensure_response( $response );
	}

	/**
	 * @param WP_Error $error
	 * @return array
	 */
	protected function format_error( WP_Error $error ) {
		$messages = array();
		foreach ( $error->get_error_codes() as $code ) {
			foreach ( $error->get_error_messages( $code ) as $err ) {
				$messages[] = $err;
			}
		}

		return $messages;
	}
}